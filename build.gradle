plugins {
    id 'java'
    id "io.freefair.lombok" version "5.3.3.3"
}

group 'org.example'
version '1.0-SNAPSHOT'

ext {
    seleniumVersion = '3.141.59'
    httpcomponentsVersion = '4.5.13'
    log4jVersion = '2.12.1'
    cucumberVersion = '6.10.3'
}

repositories {
    mavenCentral()
}

dependencies {

    // Selenium libraries
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: seleniumVersion
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: seleniumVersion
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: seleniumVersion

    // Selenide Library - Alternative to selenium, to manage staleElementExceptions and design patters better.
    implementation group: 'com.codeborne', name: 'selenide', version: '5.20.4'

    //  Library which allows to automate the management of the drivers (e.g. chromedriver, geckodriver, etc.) required by Selenium WebDriver
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.7.1'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.12.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'


    // Rest client libraries
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: httpcomponentsVersion
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: httpcomponentsVersion
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

    // Cucumber libraries
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: cucumberVersion
    implementation group: 'io.cucumber', name: 'cucumber-java', version: cucumberVersion
    implementation group: 'io.cucumber', name: 'cucumber-core', version: cucumberVersion
    implementation group: 'io.cucumber', name: 'cucumber-jvm', version: cucumberVersion, ext: 'pom'
    implementation group: 'com.aventstack', name: 'extentreports', version: '5.0.7'

    implementation 'info.cukes:gherkin:2.12.2'


    // Dependency Injection
    implementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: cucumberVersion


    // Better Assertions
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.17.0'

    // Awaitility is a DSL that allows you to express expectations of an asynchronous system in a concise and easy to read manner
    implementation 'org.awaitility:awaitility:4.0.3'

    //  Generates fake data, It's useful when you're developing a new project and need some pretty data for showcase.
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

    implementation group: 'io.cucumber', name: 'cucumber-testng', version: cucumberVersion
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    systemProperty "browser", System.getProperty("browser")
    systemProperty "env", System.getProperty("env")
    systemProperty "log4j2.debug", System.getProperty("log4j2.debug")
    systemProperty "selenide.browser", System.getProperty("selenide.browser")
    systemProperty "selenide.headless", System.getProperty("selenide.headless")
    systemProperty "selenide.timeout", System.getProperty("selenide.timeout")
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")


    useTestNG()
    scanForTestClasses = false
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}
